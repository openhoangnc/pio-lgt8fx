name: Commit date to master
on: 
  schedule:
    - cron: "0 0 * * *"
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: do-it
        run: |
          apt install unzip wget jq -y
          
          THIS_VERSION=`curl -s https://raw.githubusercontent.com/openhoangnc/lgt8fx/main/package.json | jq -r '.version'`
          NEW_VERSION=`curl -s https://raw.githubusercontent.com/dbuezas/lgt8fx/master/package_lgt8fx_index.json | jq -r '.packages[0].platforms[0].version'`
          NEW_PACKAGE_URL=`curl -s https://raw.githubusercontent.com/dbuezas/lgt8fx/master/package_lgt8fx_index.json | jq -r '.packages[0].platforms[0].url'`
          
          if [ NEW_VERSION = THIS_VERSION ]
          then
              echo No new version
              exit 0
          fi
          echo There is new version $NEW_VERSION $NEW_PACKAGE_URL

          mkdir -p .tmp && cd .tmp
          wget -O package.zip $NEW_PACKAGE_URL
          git clone git@github.com:openhoangnc/lgt8fx.git --depth 1 lgt8f
          
          cp lgt8f/README.md .
          cp lgt8f/LICENSE .
          cp lgt8f/package.json .
          sed -i "s/\"version\": \"${THIS_VERSION}\"/\"version\": \"${NEW_VERSION}\"/gi" package.json -s
          
          cd lgt8f && git rm -r * && cd ..
          unzip -o package.zip && rm package.zip
          
          mv package.json lgt8f/
          mv LICENSE lgt8f/
          mv README.md lgt8f/
          cd lgt8f
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add . && git commit -m "v${NEW_VERSION}" &&  git tag -f v${NEW_VERSION}
          git push && git push -f --tags
          
